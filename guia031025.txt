# üìã GU√çA T√âCNICA Y DOCUMENTACI√ìN - SISTEMA PDT FUTURA
**Versi√≥n:** 3.1 | **Fecha:** 18 de octubre de 2025
**Desarrollador:** G√≥mez Fredy SAP | gomez.fredy.sap@gmail.com | +57 3203284420

---

## üéØ 1. CONCEPTO GENERAL DE LA APLICACI√ìN WEB

### ¬øQu√© es PDT Futura?
PDT Futura es un **Sistema Integral de Gesti√≥n de Proyectos** especializado en proyectos de telecomunicaciones e infraestructura cr√≠tica. La plataforma permite gestionar proyectos complejos con m√∫ltiples fases, usuarios y m√©tricas de rendimiento avanzadas, enfoc√°ndose especialmente en proyectos de redes de fibra √≥ptica para parques e√≥licos.

### Prop√≥sito Principal
- **Gesti√≥n Eficiente:** Controlar cronogramas, recursos y progreso de proyectos t√©cnicos complejos
- **Colaboraci√≥n:** Facilitar el trabajo en equipo con roles definidos y permisos granulares
- **Seguimiento en Tiempo Real:** Monitorear m√©tricas de rendimiento (SPI, SV) y generar reportes autom√°ticos
- **Automatizaci√≥n:** Notificaciones por email y c√°lculos autom√°ticos de cronogramas

### Alcance del Sistema
- ‚úÖ Gesti√≥n completa del ciclo de vida de proyectos
- ‚úÖ Sistema de usuarios con roles y permisos
- ‚úÖ M√©tricas de rendimiento basadas en EVM (Earned Value Management)
- ‚úÖ Notificaciones autom√°ticas por email
- ‚úÖ Interfaz web responsive y moderna

---

## üìñ 2. GENERALIDADES

### Arquitectura del Sistema
- **Frontend:** Aplicaci√≥n web SPA (Single Page Application) con HTML5, CSS3 y JavaScript ES6+
- **Backend:** Servidor Node.js con Express.js para APIs REST
- **Base de Datos:** Firebase Firestore (NoSQL en la nube)
- **Autenticaci√≥n:** Firebase Authentication con email/password
- **Almacenamiento:** Firebase Storage para archivos y Firebase Hosting para despliegue
- **Notificaciones:** Sistema de emails integrado con Gmail API

### Caracter√≠sticas T√©cnicas
- **Tiempo Real:** Sincronizaci√≥n autom√°tica de datos entre usuarios
- **Offline-First:** Funcionalidad b√°sica disponible sin conexi√≥n
- **Escalabilidad:** Arquitectura preparada para m√∫ltiples proyectos simult√°neos
- **Seguridad:** Autenticaci√≥n robusta y control de acceso basado en roles
- **Rendimiento:** Optimizaci√≥n con lazy loading y cache inteligente

### Casos de Uso Principales
1. **Proyectos de Telecomunicaciones:** Redes de fibra √≥ptica para parques e√≥licos
2. **Infraestructura Cr√≠tica:** Sistemas SCADA y monitoreo industrial
3. **Proyectos de Construcci√≥n:** Coordinaci√≥n de m√∫ltiples equipos y fases
4. **Gesti√≥n de Recursos:** Asignaci√≥n y seguimiento de personal calificado

---

## üõ†Ô∏è 3. PLATAFORMAS Y TECNOLOG√çAS APLICADAS

### Tecnolog√≠as Frontend
```
HTML5 + CSS3 (Flexbox/Grid)
‚îú‚îÄ‚îÄ JavaScript ES6+ (Vanilla JS - Sin frameworks pesados)
‚îú‚îÄ‚îÄ Firebase SDK (9.0+)
‚îî‚îÄ‚îÄ Chart.js (Gr√°ficos y diagramas)
```

### Tecnolog√≠as Backend
```
Node.js + Express.js
‚îú‚îÄ‚îÄ Firebase Admin SDK
‚îú‚îÄ‚îÄ Nodemailer (Env√≠o de emails)
‚îú‚îÄ‚îÄ CORS (Cross-Origin Resource Sharing)
‚îî‚îÄ‚îÄ Helmet (Seguridad HTTP)
```

### Servicios en la Nube
```
Firebase Ecosystem
‚îú‚îÄ‚îÄ Firestore (Base de datos NoSQL)
‚îú‚îÄ‚îÄ Authentication (Sistema de usuarios)
‚îú‚îÄ‚îÄ Storage (Archivos y assets)
‚îú‚îÄ‚îÄ Hosting (Despliegue web)
‚îî‚îÄ‚îÄ Functions (L√≥gica serverless - futuro)
```

### Infraestructura y DevOps
```
Desarrollo Local
‚îú‚îÄ‚îÄ Node.js 18+
‚îú‚îÄ‚îÄ NPM/Yarn
‚îú‚îÄ‚îÄ Git (Control de versiones)
‚îî‚îÄ‚îÄ VS Code (IDE recomendado)

Despliegue
‚îú‚îÄ‚îÄ Firebase Hosting
‚îú‚îÄ‚îÄ Variables de entorno (.env)
‚îî‚îÄ‚îÄ CI/CD con GitHub Actions (futuro)
```

### Librer√≠as y Dependencias Clave
- **Cliente HTTP:** Fetch API nativo (sin Axios para reducir bundle)
- **Fechas:** date-fns para manipulaci√≥n avanzada
- **Utilidades:** Lodash para operaciones funcionales
- **UI/UX:** CSS Grid y Flexbox para layouts responsive

---

## üë§ 4. PROCESO DE USUARIO REGULAR

### Diagrama de Flujo - Usuario Regular

```
1. REGISTRO
   ‚Üì
2. VERIFICACI√ìN DE EMAIL
   ‚Üì
3. LOGIN
   ‚Üì
4. DASHBOARD PRINCIPAL
   ‚Üì
5. UNI√ìN A PROYECTOS
   ‚Üì
6. INTERACCI√ìN CON PROYECTOS
   ‚Üì
7. SEGUIMIENTO Y REPORTES
```

### Paso a Paso Detallado

#### **Paso 1: Registro de Usuario**
1. Acceder a `index.html` (p√°gina de login)
2. Hacer clic en "Crear cuenta nueva"
3. Completar formulario:
   - Nombre completo
   - Email corporativo
   - Contrase√±a (m√≠nimo 8 caracteres)
   - Confirmar contrase√±a
4. Aceptar t√©rminos y condiciones
5. Hacer clic en "Registrarse"

#### **Paso 2: Verificaci√≥n de Email**
- Recibir email autom√°tico de verificaci√≥n
- Hacer clic en enlace de verificaci√≥n
- Regresar a la aplicaci√≥n y hacer login

#### **Paso 3: Primer Login**
- Ingresar email y contrase√±a
- Sistema valida credenciales con Firebase Auth
- Redirecci√≥n autom√°tica al dashboard

#### **Paso 4: Dashboard Principal**
- Vista general de proyectos asignados
- Notificaciones pendientes
- M√©tricas personales de rendimiento
- Acceso r√°pido a proyectos activos

#### **Paso 5: Uni√≥n a Proyectos**
- Dos m√©todos principales:
  - **Invitaci√≥n directa:** Email con enlace de invitaci√≥n
  - **Solicitud manual:** Administrador agrega usuario al proyecto
- Confirmaci√≥n de aceptaci√≥n de invitaci√≥n

#### **Paso 6: Interacci√≥n con Proyectos**
- **Vista de proyecto:** `vistaProyecto.html`
- Navegaci√≥n por fases y tareas
- Marcar tareas como completadas
- Visualizar progreso en tiempo real
- Acceder a reportes y m√©tricas

#### **Paso 7: Seguimiento y Reportes**
- Recibir notificaciones autom√°ticas
- Visualizar m√©tricas y reportes en tiempo real
- Ver curva S y m√©tricas SPI/SV
- Historial de actividades realizadas

---

## üë• 5. ROLES DE USUARIOS Y GESTI√ìN

### Tipos de Roles

#### **1. Administrador del Sistema**
**Permisos:**
- Crear y gestionar todos los proyectos
- Gestionar usuarios del sistema
- Configurar par√°metros globales
- Acceder a reportes de todos los proyectos
- Modificar configuraciones cr√≠ticas

**Responsabilidades:**
- Configuraci√≥n inicial del sistema
- Gesti√≥n de usuarios y permisos
- Mantenimiento y soporte t√©cnico
- Supervisi√≥n general del rendimiento

#### **2. L√≠der de Proyecto (Project Manager)**
**Permisos:**
- Crear proyectos en su √°rea
- Gestionar usuarios de sus proyectos
- Modificar cronogramas y tareas
- Generar reportes completos
- Configurar notificaciones del proyecto

**Responsabilidades:**
- Planificaci√≥n y ejecuci√≥n de proyectos
- Coordinaci√≥n de equipos
- Seguimiento de m√©tricas de rendimiento
- Comunicaci√≥n con stakeholders

#### **3. Usuario Regular (Team Member)**
**Permisos:**
- Ver proyectos asignados
- Marcar tareas como completadas
- Visualizar m√©tricas y reportes
- Recibir notificaciones
- Generar reportes personales

**Responsabilidades:**
- Ejecutar tareas asignadas
- Reportar progreso real
- Mantener comunicaci√≥n con el equipo
- Cumplir con cronogramas establecidos

### Gu√≠a de Registro de Usuarios

#### **Registro por Invitaci√≥n (Recomendado)**
1. **Administrador/L√≠der** env√≠a invitaci√≥n desde la gesti√≥n de usuarios
2. **Usuario** recibe email con enlace √∫nico
3. **Usuario** completa perfil b√°sico (si es necesario)
4. **Sistema** asigna autom√°ticamente al proyecto

#### **Registro Independiente**
1. **Usuario** se registra normalmente en el sistema
2. **Usuario** solicita uni√≥n a proyecto espec√≠fico
3. **Administrador** aprueba y asigna rol apropiado

### Gesti√≥n de Usuarios en Proyectos

#### **Agregar Usuario a Proyecto**
```
M√©todo 1: Desde Gesti√≥n de Usuarios
1. Ir a "Usuarios" ‚Üí "Gestionar Usuarios"
2. Buscar usuario por email
3. Seleccionar proyecto destino
4. Asignar rol (Regular/L√≠der)
5. Confirmar asignaci√≥n

M√©todo 2: Invitaci√≥n por Email
1. En vista de proyecto ‚Üí "Gestionar Equipo"
2. Ingresar email del nuevo usuario
3. Seleccionar rol
4. Sistema env√≠a invitaci√≥n autom√°tica
```

#### **Cambiar Rol de Usuario**
1. Acceder a configuraci√≥n del proyecto
2. Seleccionar usuario en lista de equipo
3. Modificar rol en dropdown
4. Confirmar cambio (requiere permisos de l√≠der)

#### **Remover Usuario de Proyecto**
1. En gesti√≥n de equipo del proyecto
2. Seleccionar usuario a remover
3. Confirmar eliminaci√≥n
4. Usuario pierde acceso pero mantiene cuenta

---

## ‚öôÔ∏è 6. CONFIGURACIONES CON PROVEEDORES DE SERVICIOS

### Firebase Configuration
**Archivo:** `.env` (NO subir a repositorio)

```env
# Firebase Configuration
FIREBASE_API_KEY=your_api_key_here
FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_STORAGE_BUCKET=your_project.appspot.com
FIREBASE_MESSAGING_SENDER_ID=123456789
FIREBASE_APP_ID=1:123456789:web:abcdef123456

# Firebase Admin SDK (Server Side)
FIREBASE_ADMIN_TYPE=service_account
FIREBASE_ADMIN_PROJECT_ID=your_project_id
FIREBASE_ADMIN_PRIVATE_KEY_ID=abcdef123456
FIREBASE_ADMIN_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY\n-----END PRIVATE KEY-----\n"
FIREBASE_ADMIN_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your_project.iam.gserviceaccount.com
FIREBASE_ADMIN_CLIENT_ID=123456789
FIREBASE_ADMIN_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_ADMIN_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_ADMIN_AUTH_PROVIDER_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_ADMIN_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-xxxxx%40your_project.iam.gserviceaccount.com
```

### Gmail API Configuration
**Archivo:** `.env`

```env
# Gmail Configuration for Notifications
GMAIL_USER=your-email@gmail.com
GMAIL_APP_PASSWORD=your_app_password_here

# Gmail App Password Generation:
# 1. Ir a Google Account Settings
# 2. Security ‚Üí 2-Step Verification ‚Üí App passwords
# 3. Generar password para "Mail"
# 4. Usar ese password (no el normal de Gmail)
```

### Variables de Entorno Adicionales
```env
# Server Configuration
PORT=3001
NODE_ENV=production

# Security
JWT_SECRET=your_jwt_secret_here
SESSION_TIMEOUT=3600000

# External APIs (Future)
OPENAI_API_KEY=your_openai_key
SLACK_WEBHOOK_URL=your_slack_webhook
```

### Configuraci√≥n de Firebase Security Rules
**Archivo:** `firestore.rules`

```javascript
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Project access based on membership
    match /projects/{projectId} {
      allow read: if request.auth != null &&
        (request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members ||
         get(/databases/$(database)/documents/projects/$(projectId)).data.owner == request.auth.uid);

      allow write: if request.auth != null &&
        (get(/databases/$(database)/documents/projects/$(projectId)).data.owner == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
  }
}
```

---

## üìã 7. CREACI√ìN Y GESTI√ìN DE PROYECTOS

### M√©todos de Creaci√≥n de Proyectos

#### **M√©todo 1: Creaci√≥n Manual (Interfaz Web)**
1. Acceder como Administrador/L√≠der
2. Ir a "Proyectos" ‚Üí "Crear Nuevo Proyecto"
3. Completar formulario b√°sico:
   - Nombre del proyecto
   - Descripci√≥n
   - Fecha de inicio
   - Fecha estimada de fin
   - Presupuesto (opcional)
4. Configurar fases iniciales
5. Asignar usuarios al proyecto

#### **M√©todo 2: Importaci√≥n desde CSV/Excel (GenerarProy.html)**
- **Uso:** Para creaci√≥n masiva de proyectos
- **Formato requerido:** Archivo CSV con columnas espec√≠ficas
- **Campos obligatorios:**
  - Nombre del proyecto
  - Fecha inicio
  - Lista de fases
  - Duraci√≥n estimada por fase
- **Proceso:**
  1. Preparar archivo CSV
  2. Acceder a `GenerarProy.html`
  3. Subir archivo
  4. Revisar preview
  5. Confirmar creaci√≥n

### Gesti√≥n Avanzada de Proyectos

#### **Configuraci√≥n de Cronogramas**
```
Par√°metros de Trabajo:
- Horas por d√≠a: 8 horas (configurable)
- D√≠as laborables: Lunes a Viernes
- Exclusi√≥n de festivos: Configurable por proyecto
- Horarios: 08:00 - 18:00 (configurable)
- Descanso: 1 hora (configurable)

C√°lculo Autom√°tico:
- Sistema calcula fechas bas√°ndose en horas de tareas
- Respeta festivos y fines de semana
- Ajusta autom√°ticamente por cambios en configuraci√≥n
```

#### **Fases y Tareas**
- **Estructura Jer√°rquica:** Proyecto ‚Üí Fases ‚Üí Tareas
- **Estados de Tareas:** Pendiente ‚Üí En Progreso ‚Üí Completada
- **Asignaci√≥n:** Tareas pueden asignarse a usuarios espec√≠ficos
- **Dependencias:** Sistema soporta tareas dependientes (futuro)

#### **M√©tricas y Reportes**
- **SPI (Schedule Performance Index):** Eficiencia del cronograma
- **SV (Schedule Variance):** Variaci√≥n respecto al plan
- **Curva S:** Gr√°fico de progreso acumulado
- **Reportes Web:** Visualizaci√≥n en tiempo real con diagramas

### Notas de Implementaci√≥n Clave

#### **C√°lculos de Cronograma**
```javascript
// L√≥gica de c√°lculo de fechas
function calculateTaskDates(task, projectConfig) {
    const { hours, startDate } = task;
    const { workHoursPerDay, workDays, holidays } = projectConfig;

    // Calcular d√≠as necesarios
    const daysNeeded = Math.ceil(hours / workHoursPerDay);

    // Encontrar fecha fin respetando d√≠as laborables
    let currentDate = new Date(startDate);
    let workedDays = 0;

    while (workedDays < daysNeeded) {
        if (isWorkDay(currentDate, workDays, holidays)) {
            workedDays++;
        }
        currentDate.setDate(currentDate.getDate() + 1);
    }

    return {
        startDate: startDate,
        endDate: new Date(currentDate.setDate(currentDate.getDate() - 1))
    };
}
```

#### **Validaciones Cr√≠ticas**
- ‚úÖ Verificar solapamiento de tareas en misma fase
- ‚úÖ Validar dependencias entre tareas
- ‚úÖ Controlar capacidad de usuarios (sobre-asignaci√≥n)
- ‚úÖ Alertas por cambios en cronograma base

#### **Optimizaciones Futuras**
- üîÑ Sistema de dependencias entre tareas
- üîÑ Asignaci√≥n autom√°tica basada en habilidades
- üîÑ Integraci√≥n con calendarios externos (Google Calendar)
- üîÑ API para integraci√≥n con otros sistemas PM

---

## üìä 8. SEGUIMIENTO DE PROYECTOS

### Dashboard de Proyecto (`vistaProyecto.html`)

#### **Vista General**
- **Header:** Nombre, estado, fechas, progreso general
- **M√©tricas Clave:** SPI, SV, porcentaje completado
- **Equipo:** Lista de miembros con roles
- **Fases:** Accordion con tareas por fase

#### **M√©tricas de Rendimiento**

##### **SPI (√çndice de Rendimiento del Cronograma)**
```
F√≥rmula: SPI = Progreso Real / Progreso Planificado

Interpretaci√≥n:
- SPI > 1.0: Adelantado (m√°s eficiente)
- SPI = 1.0: En tiempo (seg√∫n plan)
- SPI < 1.0: Atrasado (menos eficiente)

Ejemplo: SPI = 1.2 (20% m√°s eficiente que lo planeado)
```

##### **SV (Variaci√≥n del Cronograma)**
```
F√≥rmula: SV = Progreso Real - Progreso Planificado

Interpretaci√≥n:
- SV > 0: Adelantado
- SV = 0: En tiempo
- SV < 0: Atrasado

Ejemplo: SV = +20 horas (20 horas adelantado)
```

##### **Estados del Proyecto**
- üü¢ **Muy Adelantado:** SV > 10%
- üü° **Adelantado:** SV 5-10%
- üîµ **En Tiempo:** SV -5% a +5%
- üü† **Atrasado:** SV -5% a -10%
- üî¥ **Muy Atrasado:** SV < -10%

#### **Curva S (Gr√°fico de Progreso)**
- **Eje X:** Tiempo (fechas del proyecto)
- **Eje Y:** Progreso acumulado (porcentaje)
- **L√≠neas:**
  - L√≠nea azul: Progreso planificado
  - L√≠nea verde: Progreso real
  - √Årea sombreada: Variaci√≥n

#### **Reportes Autom√°ticos**
- **Frecuencia:** Diaria/semanal/mensual
- **Contenido:**
  - Resumen ejecutivo
  - M√©tricas detalladas
  - Diagrama de Gantt actualizado
  - Lista de tareas cr√≠ticas
  - Recomendaciones de acci√≥n

### Seguimiento en Tiempo Real

#### **Notificaciones Autom√°ticas**
- ‚úÖ Tarea completada por usuario
- ‚úÖ Cambio en estado del proyecto
- ‚úÖ Vencimiento de plazos
- ‚úÖ Uniones/salidas de miembros
- ‚úÖ Actualizaciones de cronograma

#### **Alertas y Avisos**
- üö® Tareas vencidas
- ‚ö†Ô∏è Proyectos en riesgo (SPI < 0.8)
- üìÖ Recordatorios de tareas pr√≥ximas
- üë• Cambios en asignaci√≥n de equipo

---

## üöÄ 9. RECOMENDACIONES PARA DESARROLLO FUTURO

### Temas Clave a Desarrollar

#### **1. Optimizaci√≥n de C√≥digo**
- [ ] **Refactorizaci√≥n completa:** Separar responsabilidades, eliminar c√≥digo duplicado
- [ ] **Componentes reutilizables:** Crear sistema de componentes modulares
- [ ] **TypeScript:** Migrar a TypeScript para mejor mantenibilidad
- [ ] **Testing:** Implementar suite de pruebas unitarias e integraci√≥n
- [ ] **Performance:** Lazy loading, code splitting, optimizaci√≥n de bundle

#### **2. Arquitectura y Escalabilidad**
- [ ] **Microservicios:** Separar frontend/backend en servicios independientes
- [ ] **API RESTful completa:** Endpoints estandarizados con documentaci√≥n OpenAPI
- [ ] **Base de datos relacional:** Evaluar migraci√≥n a PostgreSQL/MySQL
- [ ] **Cache distribuido:** Redis para mejorar rendimiento
- [ ] **CDN:** Implementar CDN para assets est√°ticos

#### **3. Funcionalidades Avanzadas**
- [ ] **Gesti√≥n de dependencias:** Entre tareas y fases
- [ ] **Asignaci√≥n autom√°tica:** Basada en habilidades y disponibilidad
- [ ] **Integraciones:** Slack, Microsoft Teams, Jira, Trello
- [ ] **Mobile App:** Aplicaci√≥n m√≥vil nativa o PWA
- [ ] **IA/ML:** Predicciones de riesgo, estimaciones autom√°ticas

#### **4. Seguridad y Compliance**
- [ ] **Auditor√≠a completa:** Logs detallados de todas las acciones
- [ ] **Encriptaci√≥n:** Datos sensibles en reposo y en tr√°nsito
- [ ] **GDPR Compliance:** Manejo de datos personales
- [ ] **2FA:** Autenticaci√≥n de dos factores
- [ ] **Backup autom√°tico:** Estrategia de respaldo y recuperaci√≥n

#### **5. UX/UI y Accesibilidad**
- [ ] **Redise√±o completo:** UI moderna con design system
- [ ] **Accesibilidad WCAG 2.1:** Cumplimiento total
- [ ] **Internacionalizaci√≥n:** Soporte multi-idioma
- [ ] **Modo oscuro:** Tema oscuro para reducci√≥n de fatiga visual
- [ ] **PWA:** Progressive Web App con instalaci√≥n offline

#### **6. DevOps y Mantenimiento**
- [ ] **CI/CD Pipeline:** Automatizaci√≥n completa de despliegue
- [ ] **Monitoring:** Dashboards de rendimiento y errores
- [ ] **Documentaci√≥n t√©cnica:** Gu√≠as completas para desarrolladores
- [ ] **Versionado sem√°ntico:** Estrategia clara de releases
- [ ] **Soporte multi-entorno:** Desarrollo, staging, producci√≥n

### Pr√≥ximos Pasos Inmediatos

#### **Prioridad Alta (1-2 semanas)**
1. **Limpieza de c√≥digo:** Eliminar funciones no utilizadas, optimizar algoritmos
2. **Consistencia de m√©tricas:** Unificar c√°lculos en vistaProyecto
3. **Correcci√≥n de curva S:** Asegurar datos precisos y consistentes
4. **Validaci√≥n de formularios:** Mejorar UX en creaci√≥n de proyectos

#### **Prioridad Media (2-4 semanas)**
1. **Sistema de notificaciones mejorado:** Templates HTML, programador de env√≠os
2. **Gesti√≥n avanzada de usuarios:** Bulk operations, import/export
3. **Reportes customizables:** Filtros, formatos m√∫ltiples
4. **API Backend robusta:** Endpoints REST completos

#### **Prioridad Baja (1-3 meses)**
1. **Migraci√≥n a framework moderno:** React/Vue para mejor mantenibilidad
2. **Sistema de plugins:** Arquitectura extensible
3. **Analytics integrado:** M√©tricas de uso y rendimiento
4. **Integraci√≥n con ERP:** SAP, Oracle, otros sistemas empresariales

---

## üìû CONTACTO Y SOPORTE

**Desarrollador Principal:**
- **Nombre:** G√≥mez Fredy SAP
- **Email:** gomez.fredy.sap@gmail.com
- **Tel√©fono:** +57 3203284420
- **LinkedIn:** [Perfil profesional]

**Documentaci√≥n T√©cnica:**
- **Repositorio:** [URL del repositorio]
- **Wiki:** [URL de documentaci√≥n]
- **Issues:** [Sistema de tickets]

**Soporte de Producci√≥n:**
- **Email:** soporte@pdtfutura.com
- **Horario:** Lunes a Viernes, 8:00 AM - 6:00 PM (GMT-5)
- **SLA:** Respuesta en menos de 24 horas para issues cr√≠ticos

---

**√öltima actualizaci√≥n:** 18 de octubre de 2025
**Versi√≥n del documento:** 3.1
**Estado:** En desarrollo activo
